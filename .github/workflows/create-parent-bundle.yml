name: Create Parent Bundle

permissions:
  id-token: write

on:
  workflow_dispatch:
    inputs:
      ecu1-release-bundle-version:
        description: 'The Version of the ECU1 Bundle to Include'
        required: false
      ecu2-release-bundle-version:
        description: 'The Version of the ECU2 Bundle to Include'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ECU1_BUILD_NAME: 'ecu1-build'
      ECU2_BUILD_NAME: 'ecu2-build'
      ECU1_BUNDLE_NAME: 'ecu1-bundle'
      ECU2_BUNDLE_NAME: 'ecu2-bundle'
      GPG_KEY_NAME: 'tomj-gpg-key'
      ECU1_QA_REPO: 'ecu1-maven-qa-local'
      ECU2_QA_REPO: 'ecu1-maven-qa-local'
    steps:
      # Checkout the repository code
      - name: Checkout specific commit
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.ref }}

      # Set up JDK (Java Development Kit)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      # Initialize the JFrog CLI for various steps in this workflow
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        id: setup-jfrog-cli
        env:
          JF_URL: ${{ vars.JF_URL }}
        with:
          oidc-provider-name: github-oidc-integration
          oidc-audience: jfrog-github

      - name: Find Latest ECU1 Bundle Promotion to QA
        id: ecu1-latest-rb
        working-directory: .github/workflows
        run: |
          chmod +x find-latest-promotion-to-env.sh
          LATEST_VERSION=$(./find-latest-promotion-to-env.sh \
          ${{ secrets.CURL_BASIC_AUTH }} \
          ${{ env.GPG_KEY_NAME }} \
          ${{ env.ECU1_BUNDLE_NAME }} \
          "QA")
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_OUTPUT

      - name: Validate ECU1 Latest Bundle
        run: |
          echo ${{ steps.ecu1-latest-rb.outputs.LATEST_VERSION }}

      - name: Find Latest ECU2 Bundle Promotion to QA
        id: ecu2-latest-rb
        run: |
          echo 'foo'

      - name: Create Parent Release Bundle from Child Bundles
        id: create-parent-bundle
        run: |
          echo 'foo'

      - name: Promote Parent Bundle to Production
        id: promote-parent-prod
        run: |
          echo 'foo'